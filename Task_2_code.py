import pandas as pd 
import numpy as np
import math 

'''
Реализованный алгоритм расчета:
1. Рассчитываем общее количество задач по проектам:
cnt_project1 - фактическое количество задач, по проекту 1
cnt_project2 - фактическое количество задач, по проекту 2

2. Рассчитываем медианное количество задач, которое по факту решают ассессоры за 30 секунд. Медианное количество задач также рассчитывается для каждого проекта
median_cnt_project1 - медианное количество задач, которое асессор решает за 30 секунд по проекту 1
median_cnt_project2 - медианное количество задач, которое асессор решает за 30 секунд по проекту 2

3. Рассчитываем конечную стоимость выполнения задач асессором из двух проектов, согласно условию что за 30 секунд асессор получает N рублей:
3.1. Количество периодов (по 30 секунд), которые должны быть затрачены на решение всех задач по проектам 1 и 2 = фактическое количество задач (проект1) / медианное количество задач за 30 секунд(проект1) + фактическое количество задач (проект2) / медианное количество задач за 30 секунд(проект2)
Формула: period_cnt_30 = cnt_project1 / median_cnt_project1 + cnt_project2 /median_cnt_project2
3.2. Оплата за выполнение задач по проектам = Количество периодов (по 30 секунд) * N
Формула: period_cnt_30 * N (руб)

'''

#читаем файл с помощью pandas
df = pd.read_csv('task_about_time.tsv', header = 0, sep = '\t')

#рассчитываем разницу между полями end_ts и start_ts, получаем фактическое количество милисекунд, затраченное на выполнения каждого задания
df['diff_ts'] = df['end_ts'] - df['start_ts'] 

#считаем количество задач по проектам (всего)
cnt_project1 = len(df[df['project_id'] == 1].index)
cnt_project2 = len(df[df['project_id'] == 2].index)

#---------БЛОК РАСЧЕТА 1 ----#блок расчета медианного значения количества задач по проектам, фактически решаемых за 30 секунд ассессорами.
#создаем индекс по проекту и асессору
df = df.set_index(['worker','project_id']) 
df = df.sort_index()

#Создание массивов, из которых потом будет создаваться результирующий DataFrame
a_cnt = [] #пустой массив для записи количества выполненных заданий асессорами
a_index_login = [] #пустой массив для записи значений поля worker
a_index_project = [] #пустой массив для записи значений поля project_id

for i in pd.unique(df.index): #для каждого ['worker','project_id']
    df_temp = df.loc[i] 
    df_temp = df_temp.sort_values(by=['start_ts'])
    df_temp['cumsum']= df_temp.groupby(level=-1)['diff_ts'].cumsum() #считаем кумулятивную сумму по количеству милисекунд затраченных на решение задачи с момента начала работы aсессора (По отсортированному DataFrame по полю ['start_ts'])
    list_ts_by_30_sec = [number for number in range(0,df_temp['cumsum'].max()) if number % 30000 == 0] #Формируем список с интервалами по 30 секунд, начиная с 0 для каждого ['worker','project_id']
    for j in range(0,len(list_ts_by_30_sec)-1): #для каждого периода из списка list_ts_by_30_sec считаем количество задач, решенных асессором в рамках 30секундного периода
        a_cnt.append(len(df_temp[(df_temp['cumsum']>=list_ts_by_30_sec[j]) & (df_temp['cumsum']<list_ts_by_30_sec[j+1])].index)) #добавляем в список a_cnt количество задач, решенных асессором в рамках 30секундного периода
        a_index_login.append(i[0]) #добавляем в список a_index_login логин асессора
        a_index_project.append(i[1]) #добавляем в список a_index_project id проекта

s_means = pd.DataFrame(data = {'login': a_index_login, 'project': a_index_project, 'task_cnt': a_cnt}) #формируем DataFrame из сформированных массивов
s_means = s_means.set_index(['login','project']) #создаем индекс по проекту и асессору


#считаем медианные значения
s_means = s_means.groupby(level=1).agg({'task_cnt': np.median})
median_cnt_project1 = s_means.loc[1] #медианное количество задач, которое асессор решает за 30 секунд по проекту 1
median_cnt_project2 = s_means.loc[2] #медианное количество задач, которое асессор решает за 30 секунд по проекту 2
period_cnt_30 = cnt_project1 / median_cnt_project1 + cnt_project2 /median_cnt_project2 # Рассчитываем количество периодов (по 30 секунд), которые должны быть затрачены на решение всех задач по проектам 1 и 2
period_cnt_30=math.ceil(period_cnt_30) # округляем period_cnt_30 в большую сторону 
# Оплата за выполнение задач по проектам = period_cnt_30 * N руб

